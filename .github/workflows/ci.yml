cat > .github/workflows/ci.yml <<'YAML'
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [node-api, java-api, ai-service]

    steps:
      - uses: actions/checkout@v4

      # Node.js ---------------------------------------------------------------
      - if: ${{ matrix.service == 'node-api' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build & test (node-api)
        if: ${{ matrix.service == 'node-api' }}
        run: |
          cd services/node-api
          if [ -f package.json ]; then npm ci; npm test -- --ci || true; fi
          docker build -t ghcr.io/${{ github.repository }}/node-api:${{ github.sha }} -f Dockerfile .

      # Java -----------------------------------------------------------------
      - if: ${{ matrix.service == 'java-api' }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'   # project targets Java 25

      - name: Build & package (java-api)
        if: ${{ matrix.service == 'java-api' }}
        run: |
          cd services/java-api
          mvn -q -DskipTests clean package
          docker build -t ghcr.io/${{ github.repository }}/java-api:${{ github.sha }} -f Dockerfile .

      # Python / AI ----------------------------------------------------------
      - if: ${{ matrix.service == 'ai-service' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install & (optional) test (ai-service)
        if: ${{ matrix.service == 'ai-service' }}
        run: |
          cd services/ai-service
          python -m pip install -U pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          # pytest -q || true
          docker build -t ghcr.io/${{ github.repository }}/ai-service:${{ github.sha }} -f Dockerfile .

      # SBOM per service (unique name per matrix)
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: .
          format: spdx-json
          output-file: sbom-${{ matrix.service }}.spdx.json
          upload-artifact: true
          artifact-name: sbom-${{ matrix.service }}-${{ github.run_id }}

      # Trivy FS scan (non-blocking for now)
      - name: Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: '0'  # don't fail CI yet
        continue-on-error: true

      # Push images only on main (best-effort)
      - name: Log in to GHCR
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push images (best-effort)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker push ghcr.io/${{ github.repository }}/node-api:${{ github.sha }} || true
          docker push ghcr.io/${{ github.repository }}/java-api:${{ github.sha }} || true
          docker push ghcr.io/${{ github.repository }}/ai-service:${{ github.sha }} || true